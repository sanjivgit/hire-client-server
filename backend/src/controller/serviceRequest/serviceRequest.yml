/service-requests/create:
  post:
    summary: Create a new service request
    description: Create a service request for a specific service
    tags:
      - Service Requests
    security:
      - bearerAuth: []
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - serviceId
            properties:
              serviceId:
                type: integer
                description: ID of the service being requested
                example: 1
              description:
                type: string
                description: Additional details or requirements for the service
                example: "I need this service on weekend"
    responses:
      "200":
        description: Service request created successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                message:
                  type: string
                  example: "Service request created successfully"
                data:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 1
                    description:
                      type: string
                      example: "I need this service on weekend"
                    createdAt:
                      type: string
                      format: date-time
                    updatedAt:
                      type: string
                      format: date-time
                    user:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 2
                        name:
                          type: string
                          example: "John Doe"
                        phone:
                          type: string
                          example: "+919876543210"
                        address:
                          type: object
                          properties:
                            street:
                              type: string
                              example: "123 Main St"
                            city:
                              type: string
                              example: "New Delhi"
                            state:
                              type: string
                              example: "Delhi"
                            country:
                              type: string
                              example: "India"
                            pincode:
                              type: string
                              example: "110001"
                    service:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 3
                        name:
                          type: string
                          example: "Plumbing Service"
                        service_type:
                          type: object
                          properties:
                            id:
                              type: integer
                              example: 1
                            name:
                              type: string
                              example: "Household"




/service-requests/delete/{id}:
  delete:
    summary: Delete a service request
    description: Delete a service request by ID (only the requester can delete their own requests)
    tags:
      - Service Requests
    security:
      - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
        description: ID of the service request to delete
    responses:
      "200":
        description: Service request deleted successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                message:
                  type: string
                  example: "Service request deleted successfully"





/service-requests/user:
  get:
    summary: Get all service requests for current user
    description: Retrieve all service requests created by the authenticated user
    tags:
      - Service Requests
    security:
      - bearerAuth: []
    responses:
      "200":
        description: Successfully retrieved service requests
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                message:
                  type: string
                  example: "Service requests retrieved successfully"
                data:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      description:
                        type: string
                        example: "I need this service on weekend"
                      user:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 2
                          name:
                            type: string
                            example: "John Doe"
                          phone:
                            type: string
                            example: "+919876543210"
                      service:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 3
                          name:
                            type: string
                            example: "Plumbing Service"
                          service_type:
                            type: object
                            properties:
                              id:
                                type: integer
                                example: 1
                              name:
                                type: string
                                example: "Household"
                      acceptedService:
                        type: object
                        nullable: true
                        properties:
                          id:
                            type: integer
                            example: 5
                          partnerId:
                            type: integer
                            example: 4
                          amount:
                            type: number
                            example: 1500
                          status:
                            type: string
                            example: "pending"
                            enum: [pending, in-progress, completed, rejected]
                      createdAt:
                        type: string
                        format: date-time
                      updatedAt:
                        type: string
                        format: date-time




/service-requests:
  get:
    summary: Get all service requests (admin only)
    description: Retrieve all service requests with optional filtering (requires admin access)
    tags:
      - Service Requests
    security:
      - bearerAuth: []
    parameters:
      - in: query
        name: start_date
        schema:
          type: string
          format: date
        description: Filter by start date (YYYY-MM-DD)
      - in: query
        name: end_date
        schema:
          type: string
          format: date
        description: Filter by end date (YYYY-MM-DD)
      - in: query
        name: service_id
        schema:
          type: integer
        description: Filter by service ID
      - in: query
        name: status
        schema:
          type: string
          enum: [pending, in-progress, completed, rejected]
        description: Filter by status of accepted service
    responses:
      "200":
        description: Successfully retrieved service requests
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                message:
                  type: string
                  example: "Service requests retrieved successfully"
                data:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      description:
                        type: string
                        example: "I need this service on weekend"
                      user:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 2
                          name:
                            type: string
                            example: "John Doe"
                          phone:
                            type: string
                            example: "+919876543210"
                      service:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 3
                          name:
                            type: string
                            example: "Plumbing Service"
                          service_type:
                            type: object
                            properties:
                              id:
                                type: integer
                                example: 1
                              name:
                                type: string
                                example: "Household"
                      acceptedService:
                        type: object
                        nullable: true
                        properties:
                          id:
                            type: integer
                            example: 5
                          partnerId:
                            type: integer
                            example: 4
                          amount:
                            type: number
                            example: 1500
                          status:
                            type: string
                            example: "pending"
                            enum: [pending, in-progress, completed, rejected]
                      createdAt:
                        type: string
                        format: date-time
                      updatedAt:
                        type: string
                        format: date-time




/service-requests/{id}:
  get:
    summary: Get a service request by ID
    description: Retrieve details of a specific service request
    tags:
      - Service Requests
    security:
      - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
        description: ID of the service request to retrieve
    responses:
      "200":
        description: Successfully retrieved service request
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                message:
                  type: string
                  example: "Service request retrieved successfully"
                data:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 1
                    description:
                      type: string
                      example: "I need this service on weekend"
                    user:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 2
                        name:
                          type: string
                          example: "John Doe"
                        phone:
                          type: string
                          example: "+919876543210"
                        address:
                          type: object
                          properties:
                            street:
                              type: string
                              example: "123 Main St"
                            city:
                              type: string
                              example: "New Delhi"
                            state:
                              type: string
                              example: "Delhi"
                            country:
                              type: string
                              example: "India"
                            pincode:
                              type: string
                              example: "110001"
                    service:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 3
                        name:
                          type: string
                          example: "Plumbing Service"
                        service_type:
                          type: object
                          properties:
                            id:
                              type: integer
                              example: 1
                            name:
                              type: string
                              example: "Household"
                    acceptedService:
                      type: object
                      nullable: true
                      properties:
                        id:
                          type: integer
                          example: 5
                        partnerId:
                          type: integer
                          example: 4
                        amount:
                          type: number
                          example: 1500
                        status:
                          type: string
                          example: "pending"
                          enum: [pending, in-progress, completed, rejected] 
                    createdAt:
                      type: string
                      format: date-time
                    updatedAt:
                      type: string
                      format: date-time