{"level":"error","message":"\"full_name\" is required","metaData":{"action":"GET","apiId":"0102","version":"1.0"},"service":"user-service","timestamp":"2025-03-06T17:02:31.895Z"}
{"level":"error","message":"Request failed with status code 400","metaData":{"action":"POST","apiId":"0103","version":"1.0"},"service":"user-service","timestamp":"2025-03-09T08:12:18.891Z"}
{"level":"error","message":"Request failed with status code 400","metaData":{"action":"POST","apiId":"0103","version":"1.0"},"service":"user-service","timestamp":"2025-03-09T08:28:05.230Z"}
{"level":"error","message":"Request failed with status code 400","metaData":{"action":"POST","apiId":"0103","version":"1.0"},"service":"user-service","timestamp":"2025-03-09T08:35:44.359Z"}
{"level":"error","message":"Request failed with status code 400","metaData":{"action":"POST","apiId":"0103","version":"1.0"},"service":"user-service","timestamp":"2025-03-09T08:37:05.424Z"}
{"level":"error","message":"Request failed with status code 400","metaData":{"action":"POST","apiId":"0103","version":"1.0"},"service":"user-service","timestamp":"2025-03-09T08:38:18.748Z"}
{"level":"error","message":"Request failed with status code 400","metaData":{"action":"POST","apiId":"0103","version":"1.0"},"service":"user-service","timestamp":"2025-03-09T08:50:23.038Z"}
{"level":"error","message":"Request failed with status code 400","metaData":{"action":"POST","apiId":"0103","version":"1.0"},"service":"user-service","timestamp":"2025-03-09T09:06:08.741Z"}
{"level":"error","message":"Request failed with status code 400","metaData":{"action":"POST","apiId":"0103","version":"1.0"},"service":"user-service","timestamp":"2025-03-09T09:06:59.713Z"}
{"level":"error","message":"Request failed with status code 400","metaData":{"action":"POST","apiId":"0103","version":"1.0"},"service":"user-service","timestamp":"2025-03-09T09:08:41.486Z"}
{"level":"error","message":"Request failed with status code 400","metaData":{"action":"POST","apiId":"0103","version":"1.0"},"service":"user-service","timestamp":"2025-03-09T09:14:27.381Z"}
{"level":"error","message":"Request failed with status code 400","metaData":{"action":"POST","apiId":"0103","version":"1.0"},"service":"user-service","timestamp":"2025-03-09T09:15:09.624Z"}
{"level":"error","message":"Request failed with status code 400","metaData":{"action":"POST","apiId":"0103","version":"1.0"},"service":"user-service","timestamp":"2025-03-09T09:17:34.383Z"}
{"level":"error","message":"Request failed with status code 400","metaData":{"action":"POST","apiId":"0103","version":"1.0"},"service":"user-service","timestamp":"2025-03-09T09:19:06.520Z"}
{"level":"error","message":"column \"email\" does not exist","metaData":{"action":"POST","apiId":"0103","version":"1.0"},"service":"user-service","timestamp":"2025-03-09T09:38:13.835Z"}
{"level":"error","message":"users.findOne is not a function","metaData":{"action":"POST","apiId":"0103","version":"1.0"},"service":"user-service","timestamp":"2025-03-09T09:46:33.106Z"}
{"level":"error","message":"Cannot read properties of undefined (reading 'findOne')","metaData":{"action":"POST","apiId":"0103","version":"1.0"},"service":"user-service","timestamp":"2025-03-09T10:02:28.981Z"}
{"level":"error","message":"Cannot read properties of undefined (reading 'findOne')","metaData":{"action":"POST","apiId":"0103","version":"1.0"},"service":"user-service","timestamp":"2025-03-09T10:02:50.251Z"}
{"level":"error","message":"users.findOne is not a function","metaData":{"action":"POST","apiId":"0103","version":"1.0"},"service":"user-service","timestamp":"2025-03-09T10:08:05.294Z"}
{"level":"error","message":"Cannot read properties of undefined (reading 'findOne')","metaData":{"action":"POST","apiId":"0103","version":"1.0"},"service":"user-service","timestamp":"2025-03-09T10:17:20.894Z"}
{"level":"error","message":"Cannot read properties of undefined (reading 'findOne')","metaData":{"action":"POST","apiId":"0103","version":"1.0"},"service":"user-service","timestamp":"2025-03-09T10:18:16.256Z"}
{"level":"error","message":"Cannot read properties of undefined (reading 'findOne')","metaData":{"action":"POST","apiId":"0103","version":"1.0"},"service":"user-service","timestamp":"2025-03-09T10:21:28.237Z"}
{"level":"error","message":"users.findOne is not a function","metaData":{"action":"POST","apiId":"0103","version":"1.0"},"service":"user-service","timestamp":"2025-03-09T10:40:48.687Z"}
{"level":"error","message":"Request failed with status code 400","metaData":{"action":"POST","apiId":"0103","version":"1.0"},"service":"user-service","timestamp":"2025-03-09T11:23:12.348Z"}
{"level":"error","message":{"metaData":{"action":"GET","apiId":"0102","version":"1.0"}},"service":"user-service","timestamp":"2025-03-09T11:51:18.072Z"}
{"level":"error","message":{"metaData":{"action":"GET","apiId":"0102","version":"1.0"}},"service":"user-service","timestamp":"2025-03-09T11:52:14.293Z"}
{"level":"error","message":"column \"role\" does not exist","metaData":{"action":"GET","apiId":"0101","version":"1.0"},"service":"user-service","timestamp":"2025-03-09T14:24:39.040Z"}
{"level":"error","message":"column \"role\" does not exist","metaData":{"action":"GET","apiId":"0101","version":"1.0"},"service":"user-service","timestamp":"2025-03-09T14:25:07.931Z"}
{"level":"error","message":"column \"role\" does not exist","metaData":{"action":"GET","apiId":"0101","version":"1.0"},"service":"user-service","timestamp":"2025-03-09T14:37:46.793Z"}
{"level":"error","message":"column \"role\" does not exist","metaData":{"action":"GET","apiId":"0101","version":"1.0"},"service":"user-service","timestamp":"2025-03-09T14:40:42.856Z"}
{"level":"error","message":"include.model.getTableName is not a function","metaData":{"action":"GET","apiId":"0101","version":"1.0"},"service":"user-service","timestamp":"2025-03-09T14:41:51.357Z"}
{"level":"error","message":"roles is not associated to users!","metaData":{"action":"GET","apiId":"0101","version":"1.0"},"service":"user-service","timestamp":"2025-03-09T14:44:47.422Z"}
{"level":"error","message":"roles is associated to users using an alias. You must use the 'as' keyword to specify the alias within your include statement.","metaData":{"action":"GET","apiId":"0101","version":"1.0"},"service":"user-service","timestamp":"2025-03-09T16:41:24.811Z"}
{"level":"error","message":"roles is associated to users using an alias. You must use the 'as' keyword to specify the alias within your include statement.","metaData":{"action":"GET","apiId":"0101","version":"1.0"},"service":"user-service","timestamp":"2025-03-09T16:56:45.703Z"}
{"level":"error","message":"value too long for type character varying(255)","metaData":{"action":"GET","apiId":"0101","version":"1.0"},"service":"user-service","timestamp":"2025-03-09T17:00:47.150Z"}
{"level":"error","message":"value too long for type character varying(255)","metaData":{"action":"GET","apiId":"0101","version":"1.0"},"service":"user-service","timestamp":"2025-03-09T17:03:00.934Z"}
{"level":"error","message":{"metaData":{"action":"GET","apiId":"0101","version":"1.0"}},"service":"user-service","timestamp":"2025-03-10T02:47:54.577Z"}
{"level":"error","message":{"metaData":{"action":"Token Verification","apiId":"Not related to APIs","version":"1.0"}},"service":"user-service","timestamp":"2025-03-10T17:34:36.641Z"}
{"level":"error","message":{"metaData":{"action":"Token Verification","apiId":"Not related to APIs","version":"1.0"}},"service":"user-service","timestamp":"2025-03-10T17:42:35.193Z"}
{"level":"error","message":{"metaData":{"action":"Token Verification","apiId":"Not related to APIs","version":"1.0"}},"service":"user-service","timestamp":"2025-03-10T17:44:02.593Z"}
{"level":"error","message":{"metaData":{"action":"Token Verification","apiId":"Not related to APIs","version":"1.0"}},"service":"user-service","timestamp":"2025-03-10T17:44:27.951Z"}
{"level":"error","message":{"metaData":{"action":"Token Verification","apiId":"Not related to APIs","version":"1.0"}},"service":"user-service","timestamp":"2025-03-10T18:00:42.478Z"}
{"level":"error","message":{"metaData":{"action":"Token Verification","apiId":"Not related to APIs","version":"1.0"}},"service":"user-service","timestamp":"2025-03-10T18:02:18.072Z"}
{"level":"error","message":{"metaData":{"action":"Token Verification","apiId":"Not related to APIs","version":"1.0"}},"service":"user-service","timestamp":"2025-03-10T18:02:52.609Z"}
{"level":"error","message":{"metaData":{"action":"Token Verification","apiId":"Not related to APIs","version":"1.0"}},"service":"user-service","timestamp":"2025-03-10T18:03:15.394Z"}
{"level":"error","message":"WHERE parameter \"id\" has invalid \"undefined\" value","metaData":{"action":"GET","apiId":"0201","version":"1.0"},"service":"user-service","timestamp":"2025-03-10T18:05:07.347Z"}
{"level":"error","message":"WHERE parameter \"id\" has invalid \"undefined\" value","metaData":{"action":"GET","apiId":"0201","version":"1.0"},"service":"user-service","timestamp":"2025-03-10T18:05:49.040Z"}
{"level":"error","message":"column \"fullName\" does not exist","metaData":{"action":"GET","apiId":"0201","version":"1.0"},"service":"user-service","timestamp":"2025-03-10T18:06:44.374Z"}
{"level":"error","message":{"metaData":{"action":"Token Verification","apiId":"Not related to APIs","version":"1.0"}},"service":"user-service","timestamp":"2025-03-11T02:14:35.849Z"}
{"level":"error","message":{"metaData":{"action":"GET","apiId":"0201","version":"1.0"}},"service":"user-service","timestamp":"2025-03-11T02:15:09.159Z"}
{"level":"error","message":"Only PDF files are allowed for documents!","metaData":{"action":"GET","apiId":"0001","version":"1.0"},"service":"user-service","timestamp":"2025-03-11T02:57:57.360Z"}
{"level":"error","message":"Invalid file type specified!","metaData":{"action":"GET","apiId":"0001","version":"1.0"},"service":"user-service","timestamp":"2025-03-11T03:31:32.700Z"}
{"level":"error","message":"Invalid file type specified!","metaData":{"action":"GET","apiId":"0001","version":"1.0"},"service":"user-service","timestamp":"2025-03-11T03:31:44.780Z"}
{"level":"error","message":{"metaData":{"action":"Token Verification","apiId":"Not related to APIs","version":"1.0"}},"service":"user-service","timestamp":"2025-03-11T03:41:41.916Z"}
{"level":"error","message":"\"user\" is not allowed","metaData":{"action":"PUT","apiId":"0302","version":"1.0"},"service":"user-service","timestamp":"2025-03-11T17:31:42.266Z"}
{"level":"error","message":{"metaData":{"action":"Token Verification","apiId":"Not related to APIs","version":"1.0"}},"service":"user-service","timestamp":"2025-03-21T17:25:54.321Z"}
{"level":"error","message":"column \"serviceIds\" does not exist","metaData":{"action":"POST","apiId":"0203","version":"1.0"},"service":"user-service","timestamp":"2025-03-21T17:29:21.895Z"}
{"level":"error","message":"column \"serviceIds\" does not exist","metaData":{"action":"POST","apiId":"0203","version":"1.0"},"service":"user-service","timestamp":"2025-03-21T17:32:02.940Z"}
{"level":"error","message":"column \"serviceIds\" does not exist","metaData":{"action":"POST","apiId":"0203","version":"1.0"},"service":"user-service","timestamp":"2025-03-21T17:34:05.549Z"}
{"level":"error","message":"column \"serviceIds\" does not exist","metaData":{"action":"POST","apiId":"0203","version":"1.0"},"service":"user-service","timestamp":"2025-03-21T17:34:46.579Z"}
{"level":"error","message":"column \"serviceIds\" does not exist","metaData":{"action":"POST","apiId":"0203","version":"1.0"},"service":"user-service","timestamp":"2025-03-21T17:39:52.959Z"}
{"level":"error","message":"column \"serviceIds\" does not exist","metaData":{"action":"POST","apiId":"0203","version":"1.0"},"service":"user-service","timestamp":"2025-03-21T17:42:28.406Z"}
{"level":"error","message":"Include unexpected. Element has to be either a Model, an Association or an object.","metaData":{"action":"GET","apiId":"0101","version":"1.0"},"service":"user-service","timestamp":"2025-03-22T03:13:51.909Z"}
{"level":"error","message":"Include unexpected. Element has to be either a Model, an Association or an object.","metaData":{"action":"GET","apiId":"0101","version":"1.0"},"service":"user-service","timestamp":"2025-03-22T03:17:13.008Z"}
{"level":"error","message":"column u.roleid does not exist","metaData":{"action":"GET","apiId":"0101","version":"1.0"},"service":"user-service","timestamp":"2025-03-22T03:22:51.367Z"}
{"level":"error","message":"column r.userid does not exist","metaData":{"action":"GET","apiId":"0101","version":"1.0"},"service":"user-service","timestamp":"2025-03-22T03:31:27.376Z"}
{"level":"error","message":"column r.userid does not exist","metaData":{"action":"GET","apiId":"0101","version":"1.0"},"service":"user-service","timestamp":"2025-03-22T03:31:46.520Z"}
{"level":"error","message":"column \"createdAt\" does not exist","metaData":{"action":"GET","apiId":"0102","version":"1.0"},"service":"user-service","timestamp":"2025-03-22T16:55:58.366Z"}
{"level":"error","message":"column \"createdAt\" does not exist","metaData":{"action":"GET","apiId":"0102","version":"1.0"},"service":"user-service","timestamp":"2025-03-22T16:58:28.306Z"}
{"level":"error","message":"column \"createdAt\" does not exist","metaData":{"action":"GET","apiId":"0102","version":"1.0"},"service":"user-service","timestamp":"2025-03-22T17:00:03.765Z"}
{"level":"error","message":"column \"createdAt\" does not exist","metaData":{"action":"GET","apiId":"0102","version":"1.0"},"service":"user-service","timestamp":"2025-03-22T17:01:26.950Z"}
{"level":"error","message":"column \"createdAt\" does not exist","metaData":{"action":"GET","apiId":"0102","version":"1.0"},"service":"user-service","timestamp":"2025-03-22T17:03:36.657Z"}
{"level":"error","message":{"metaData":{"action":"GET","apiId":"0102","version":"1.0"}},"service":"user-service","timestamp":"2025-03-22T17:10:17.225Z"}
{"level":"error","message":"Cannot read properties of undefined (reading 'getTime')","metaData":{"action":"GET","apiId":"0102","version":"1.0"},"service":"user-service","timestamp":"2025-03-22T17:11:17.999Z"}
{"level":"error","message":"Cannot read properties of undefined (reading 'getTime')","metaData":{"action":"GET","apiId":"0102","version":"1.0"},"service":"user-service","timestamp":"2025-03-22T17:15:49.004Z"}
{"level":"error","message":{"metaData":{"action":"GET","apiId":"0102","version":"1.0"}},"service":"user-service","timestamp":"2025-03-22T17:16:48.915Z"}
{"level":"error","message":"column \"createdAt\" of relation \"users\" does not exist","metaData":{"action":"GET","apiId":"0102","version":"1.0"},"service":"user-service","timestamp":"2025-03-22T17:17:02.822Z"}
{"level":"error","message":{"metaData":{"action":"GET","apiId":"0102","version":"1.0"}},"service":"user-service","timestamp":"2025-03-22T17:26:26.384Z"}
{"level":"error","message":"column r.userid does not exist","metaData":{"action":"GET","apiId":"0101","version":"1.0"},"service":"user-service","timestamp":"2025-03-22T17:28:27.811Z"}
{"level":"error","message":"column \"u.id\" must appear in the GROUP BY clause or be used in an aggregate function","metaData":{"action":"GET","apiId":"0101","version":"1.0"},"service":"user-service","timestamp":"2025-03-22T17:33:40.851Z"}
{"level":"error","message":"could not identify an equality operator for type json","metaData":{"action":"GET","apiId":"0101","version":"1.0"},"service":"user-service","timestamp":"2025-03-22T17:37:27.445Z"}
{"level":"error","message":"user.get is not a function","metaData":{"action":"GET","apiId":"0101","version":"1.0"},"service":"user-service","timestamp":"2025-03-22T17:44:23.818Z"}
{"level":"error","message":"user.get is not a function","metaData":{"action":"GET","apiId":"0101","version":"1.0"},"service":"user-service","timestamp":"2025-03-22T17:48:57.802Z"}
