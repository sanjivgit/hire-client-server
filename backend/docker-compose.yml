# version: '3.9' # Specifies the version of the Docker Compose file format to use.

services: # Defines the services (containers) to be run.
  backend: # Service for the Node.js backend application.
    build: # Configuration for building the Docker image.
      context: . # Path to the directory containing the Dockerfile.
    container_name: hire_backend # A custom name for the container.
    ports:
      - "2001:2001" # Maps port 2001 on the host to port 2001 in the container.
    env_file:
      - .env # Specifies the file containing environment variables for this service.
    depends_on: # Specifies service dependencies.
      - db # Ensures the database service starts before the backend service.
    volumes:
      - .:/backend # Mounts the current directory into the container for live code changes.
      - /backend/node_modules # Prevents overwriting node_modules in the container.
    networks:
      - backend_network
    command: sh -c "sleep 10 && npx sequelize-cli db:migrate && npm start" # Command to run when the container starts (development mode).


  db: # Service for the PostgreSQL database.
    image: postgres:16 # Uses the PostgreSQL 15 image from Docker Hub.
    container_name: hire_db # A custom name for the container.
    environment: # Environment variables for PostgreSQL configuration.
      NODE_ENV: ${NODE_ENV}
      POSTGRES_USER: ${POSTGRES_USER} # Username for PostgreSQL (from .env file).
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD} # Password for PostgreSQL (from .env file).
      POSTGRES_DB: ${POSTGRES_DB} # Database name for PostgreSQL (from .env file).
    ports:
      - "5433:5432" # Maps port 5432 on the host to port 5432 in the container.
    networks:
      - backend_network
    volumes:
      - postgres_data:/var/lib/postgresql/data # Mounts a volume for persistent database storage.

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    restart: always
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    depends_on:
      - db
    networks:
      - backend_network

volumes: # Defines Docker volumes for persistent storage.
  postgres_data: # Named volume for PostgreSQL data.

networks:
  backend_network:
    driver: bridge
